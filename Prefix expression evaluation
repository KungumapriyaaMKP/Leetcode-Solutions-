#include <iostream>
#include <stack>
#include <vector>
using namespace std;

int main() {
    string s;
    getline(cin, s);

    vector<string> tokens;
    string token = "";

    // Tokenize input string by spaces
    for (char ch : s) {
        if (ch == ' ') {
            if (!token.empty()) {
                tokens.push_back(token);
                token.clear();
            }
        } else {
            token += ch;
        }
    }
    if (!token.empty()) {
        tokens.push_back(token);
    }

    stack<int> st;

    // Evaluate prefix expression from right to left
    for (int i = tokens.size() - 1; i >= 0; i--) {
        string curr = tokens[i];

        if (curr == "+" || curr == "-" || curr == "*" || curr == "/") {
            // Pop two operands
            int a = st.top(); st.pop();
            int b = st.top(); st.pop();

            int res = 0;
            if (curr == "+") res = a + b;
            else if (curr == "-") res = a - b;
            else if (curr == "*") res = a * b;
            else if (curr == "/") res = a / b;  // Integer division

            st.push(res);
        } else {
            // Operand: convert string to int and push
            st.push(stoi(curr));
        }
    }

    // Final result is on top of stack
    cout << st.top() << "\n";

    return 0;
}
